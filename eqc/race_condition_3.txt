
The race condition is between a call to tcp_con:usr_close(Socket) and an
incoming FIN packet.

In short, what happens is that the state is set to 'fin_wait_1' in
established:send/2, but this state change does not reach the reader before it
calls established:fin_action/3, and thus changing the state to 'close_wait'
instead of the correct 'closing'. Once the ACK for the FIN packet sent by
usr_close() arrives there is no code in 'close_wait' to handle it.

In more detail:

... Setting up an established socket ...
[User]    tcp_con:usr_close(Socket)
[Writer]  established:send(Tcb, {send, fin})
            Tcb ! {syncset, state, fin_wait_1, Writer}
[Reader]  tcp_con:reader_loop/3
            receive FIN (State == established)
          established:fin_action/3
            Tcb ! {syncset, state, close_wait, Reader}
[Tcb]     tcb:loop/2
            receive {syncset, state, fin_wait_1, Writer}
              Reader ! {state, fin_wait_1}
              Writer ! {state, fin_wait_1}
            receive {syncset, state, close_wait, Reader}
              Reader ! {state, close_wait}
              Writer ! {state, close_wait}
... We're now in State == close_wait, but we have already sent the FIN to the
    other side ...

Since there really is a race between usr_close() and FIN, it would also have
been valid to end up in last_ack.

Counterexample:

S: #state{ ip = undefined, sockets = [], synchronized = true}


%% self = <0.24105.0>
tcp_eqc:start("139.81.41.16") ->
  ok.

S: #state{
     ip = "139.81.41.16", sockets = [], synchronized = true}


%% self = <0.24105.0>
tcp_eqc:listen(10118) ->
  ok = mock:set_socket({<0.24109.0>, <0.24111.0>, <0.24110.0>}),
  ok.

S: #state{
     ip = "139.81.41.16",
     sockets =
       [#socket{
          tcp_state = listen,
          ip = "139.81.41.16",
          port = 10118,
          rip = undefined,
          rport = undefined,
          socket = {<0.24109.0>, <0.24111.0>, <0.24110.0>},
          socket_type = listen,
          seq = undefined,
          rcvd = undefined,
          rseq = undefined,
          id = 6,
          parent = undefined,
          blocked = [],
          accept_queue = []}],
     synchronized = true}


%% self = <0.24105.0>
tcp_eqc:syn("139.81.41.16", 10118, "184.205.84.69", 23595, 0, 6) ->
  ok = ip:send_pkt(#pkt{
             sport = 10118,
             dport = 23595,
             seq = 2440969992,
             ack = 1,
             flags = [ack, syn],
             window = 65535,
             checksum = 33385,
             urgent = 0,
             options = [{mss, 1460}],
             data = <<>>},
           "184.205.84.69", 23595),
  ok.

S: #state{
     ip = "139.81.41.16",
     sockets =
       [#socket{
          tcp_state = listen,
          ip = "139.81.41.16",
          port = 10118,
          rip = undefined,
          rport = undefined,
          socket = {<0.24109.0>, <0.24111.0>, <0.24110.0>},
          socket_type = listen,
          seq = undefined,
          rcvd = undefined,
          rseq = undefined,
          id = 6,
          parent = undefined,
          blocked = [],
          accept_queue = []},
        #socket{
          tcp_state = syn_rcvd,
          ip = "139.81.41.16",
          port = 10118,
          rip = "184.205.84.69",
          rport = 23595,
          socket = undefined,
          socket_type = accept,
          seq = {2440969992, 1},
          rcvd = undefined,
          rseq = {0, 1},
          id = 19,
          parent = 6,
          blocked = [],
          accept_queue = []}],
     synchronized = true}


%% self = <0.24105.0>
tcp_eqc:deliver(19) ->
  ok.

S: #state{
     ip = "139.81.41.16",
     sockets =
       [#socket{
          tcp_state = listen,
          ip = "139.81.41.16",
          port = 10118,
          rip = undefined,
          rport = undefined,
          socket = {<0.24109.0>, <0.24111.0>, <0.24110.0>},
          socket_type = listen,
          seq = undefined,
          rcvd = undefined,
          rseq = undefined,
          id = 6,
          parent = undefined,
          blocked = [],
          accept_queue = []},
        #socket{
          tcp_state = syn_rcvd,
          ip = "139.81.41.16",
          port = 10118,
          rip = "184.205.84.69",
          rport = 23595,
          socket = undefined,
          socket_type = accept,
          seq = {2440969992, 1},
          rcvd = {2440969992, 1},
          rseq = {0, 1},
          id = 19,
          parent = 6,
          blocked = [],
          accept_queue = []}],
     synchronized = true}


%% self = <0.24105.0>
tcp_eqc:ack("139.81.41.16", 10118, "184.205.84.69", 23595, {0, 1},
    {2440969992, 1}, 19) ->
  ok.

S: #state{
     ip = "139.81.41.16",
     sockets =
       [#socket{
          tcp_state = listen,
          ip = "139.81.41.16",
          port = 10118,
          rip = undefined,
          rport = undefined,
          socket = {<0.24109.0>, <0.24111.0>, <0.24110.0>},
          socket_type = listen,
          seq = undefined,
          rcvd = undefined,
          rseq = undefined,
          id = 6,
          parent = undefined,
          blocked = [],
          accept_queue = [19]},
        #socket{
          tcp_state = established,
          ip = "139.81.41.16",
          port = 10118,
          rip = "184.205.84.69",
          rport = 23595,
          socket = undefined,
          socket_type = accept,
          seq = {2440969992, 1},
          rcvd = {2440969992, 1},
          rseq = {0, 1},
          id = 19,
          parent = 6,
          blocked = [],
          accept_queue = []}],
     synchronized = false}


%% self = <0.24115.0>
tcp_eqc:accept({<0.24109.0>, <0.24111.0>, <0.24110.0>}, 6) ->
  ok = mock:set_socket({<0.24112.0>, <0.24114.0>, <0.24113.0>}),
  ok.

S: #state{
     ip = "139.81.41.16",
     sockets =
       [#socket{
          tcp_state = listen,
          ip = "139.81.41.16",
          port = 10118,
          rip = undefined,
          rport = undefined,
          socket = {<0.24109.0>, <0.24111.0>, <0.24110.0>},
          socket_type = listen,
          seq = undefined,
          rcvd = undefined,
          rseq = undefined,
          id = 6,
          parent = undefined,
          blocked = [],
          accept_queue = []},
        #socket{
          tcp_state = established,
          ip = "139.81.41.16",
          port = 10118,
          rip = "184.205.84.69",
          rport = 23595,
          socket = {<0.24112.0>, <0.24114.0>, <0.24113.0>},
          socket_type = accept,
          seq = {2440969992, 1},
          rcvd = {2440969992, 1},
          rseq = {0, 1},
          id = 19,
          parent = 6,
          blocked = [],
          accept_queue = []}],
     synchronized = false}


%% self = <0.24116.0>
tcp_eqc:close({<0.24112.0>, <0.24114.0>, <0.24113.0>}, 19) ->
  ok = ip:send_pkt(#pkt{
             sport = 10118,
             dport = 23595,
             seq = 2440969993,
             ack = 1,
             flags = [ack, fin],
             window = 65535,
             checksum = 39461,
             urgent = 0,
             options = [],
             data = <<>>},
           "184.205.84.69", 23595),
  ?BLOCK({close, <0.24116.0>}).

S: #state{
     ip = "139.81.41.16",
     sockets =
       [#socket{
          tcp_state = listen,
          ip = "139.81.41.16",
          port = 10118,
          rip = undefined,
          rport = undefined,
          socket = {<0.24109.0>, <0.24111.0>, <0.24110.0>},
          socket_type = listen,
          seq = undefined,
          rcvd = undefined,
          rseq = undefined,
          id = 6,
          parent = undefined,
          blocked = [],
          accept_queue = []},
        #socket{
          tcp_state = fin_wait_1,
          ip = "139.81.41.16",
          port = 10118,
          rip = "184.205.84.69",
          rport = 23595,
          socket = {<0.24112.0>, <0.24114.0>, <0.24113.0>},
          socket_type = accept,
          seq = {2440969992, 2},
          rcvd = {2440969992, 1},
          rseq = {0, 1},
          id = 19,
          parent = 6,
          blocked = [<0.24116.0>],
          accept_queue = []}],
     synchronized = false}


%% self = <0.24105.0>
tcp_eqc:fin("139.81.41.16", 10118, "184.205.84.69", 23595, {0, 1},
    {2440969992, 1}, 19) ->
  ok = ip:send_pkt(#pkt{
             sport = 10118,
             dport = 23595,
             seq = 2440969994,
             ack = 2,
             flags = [ack],
             window = 65535,
             checksum = 39460,
             urgent = 0,
             options = [],
             data = <<>>},
           "184.205.84.69", 23595),
  ok.

S: #state{
     ip = "139.81.41.16",
     sockets =
       [#socket{
          tcp_state = listen,
          ip = "139.81.41.16",
          port = 10118,
          rip = undefined,
          rport = undefined,
          socket = {<0.24109.0>, <0.24111.0>, <0.24110.0>},
          socket_type = listen,
          seq = undefined,
          rcvd = undefined,
          rseq = undefined,
          id = 6,
          parent = undefined,
          blocked = [],
          accept_queue = []},
        #socket{
          tcp_state = closing,
          ip = "139.81.41.16",
          port = 10118,
          rip = "184.205.84.69",
          rport = 23595,
          socket = {<0.24112.0>, <0.24114.0>, <0.24113.0>},
          socket_type = accept,
          seq = {2440969992, 2},
          rcvd = {2440969992, 1},
          rseq = {0, 2},
          id = 19,
          parent = 6,
          blocked = [<0.24116.0>],
          accept_queue = []}],
     synchronized = false}


%% self = <0.24105.0>
tcp_eqc:deliver(19) ->
  ok.

S: #state{
     ip = "139.81.41.16",
     sockets =
       [#socket{
          tcp_state = listen,
          ip = "139.81.41.16",
          port = 10118,
          rip = undefined,
          rport = undefined,
          socket = {<0.24109.0>, <0.24111.0>, <0.24110.0>},
          socket_type = listen,
          seq = undefined,
          rcvd = undefined,
          rseq = undefined,
          id = 6,
          parent = undefined,
          blocked = [],
          accept_queue = []},
        #socket{
          tcp_state = closing,
          ip = "139.81.41.16",
          port = 10118,
          rip = "184.205.84.69",
          rport = 23595,
          socket = {<0.24112.0>, <0.24114.0>, <0.24113.0>},
          socket_type = accept,
          seq = {2440969992, 2},
          rcvd = {2440969992, 2},
          rseq = {0, 2},
          id = 19,
          parent = 6,
          blocked = [<0.24116.0>],
          accept_queue = []}],
     synchronized = false}


%% self = <0.24105.0>
tcp_eqc:ack("139.81.41.16", 10118, "184.205.84.69", 23595, {0, 2},
    {2440969992, 2}, 19) ->
  ok.

S: #state{
     ip = "139.81.41.16",
     sockets =
       [#socket{
          tcp_state = listen,
          ip = "139.81.41.16",
          port = 10118,
          rip = undefined,
          rport = undefined,
          socket = {<0.24109.0>, <0.24111.0>, <0.24110.0>},
          socket_type = listen,
          seq = undefined,
          rcvd = undefined,
          rseq = undefined,
          id = 6,
          parent = undefined,
          blocked = [],
          accept_queue = []},
        #socket{
          tcp_state = time_wait,
          ip = "139.81.41.16",
          port = 10118,
          rip = "184.205.84.69",
          rport = 23595,
          socket = {<0.24112.0>, <0.24114.0>, <0.24113.0>},
          socket_type = accept,
          seq = {2440969992, 2},
          rcvd = {2440969992, 2},
          rseq = {0, 2},
          id = 19,
          parent = 6,
          blocked = [<0.24116.0>],
          accept_queue = []}],
     synchronized = false}


Reason:
  Post-condition failed:
  Failed unblock:
    <0.24116.0> tcp_eqc:close({<0.24112.0>, <0.24114.0>, <0.24113.0>}, 19)

